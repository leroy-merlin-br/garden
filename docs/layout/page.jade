doctype html
html(lang="pt-BR")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1")
    meta(name="description" content="A front end library to help you make your grass greener than the other side")
    title #{title} | Garden

    meta(property="og:image" content="http://styleguide.leroymerlin.com.br/images/banner.jpg")
    meta(property="og:image:type" content="image/jpeg")
    meta(property="og:image:width" content="1200")
    meta(property="og:image:height" content="630")

    link(rel="icon", href=root('images/favicon.png'), type="image/png")
    link(rel="stylesheet", href=root('assets/style.css'))

  body
    include _partials/github-corner.jade
    include _partials/header.jade

    main.docs
      .container
        if sidebar
          .col-xs-12.col-sm-4.col-md-3
            - const css = collections[collection].filter((page) => page.section === 'css')
            - const js = collections[collection].filter((page) => page.section === 'js')

            h4.heading-4 CSS

            nav.sidebar
              each page in css
                a.link(href="#{page.path}.html", class=title === page.title &&
                  section === page.section ? "link-active" : undefined) #{page.title}

            h4.heading-4 JS

            nav.sidebar
              each page in js
                a.link(href="#{page.path}.html", class=title === page.title &&
                  section === page.section ? "link-active" : undefined) #{page.title}
        if sidebar
          .col-xs-12.col-sm-8.col-md-9.content!= contents
        else
          .col-xs-12.content!= contents

    include _partials/footer.jade

    script(src=root('assets/garden.min.js'))
    script(src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/1.5.5/clipboard.min.js")
    script.
      new Clipboard('[data-copy]', {
        target: function(trigger) {
          return trigger.nextElementSibling;
        }
      });

      const text = new Clipboard('[data-clipboard-text]');

      text.on('success', function(e) {
        if (e.trigger.classList) {
          e.trigger.classList.add('copied');

          setTimeout(function() {
            e.trigger.classList.remove('copied');
          }, 1000)
        }
      });

      //- Modal page
      const modalPage = document.querySelector('[data-modal-page]')
      const defaultModalElement = document.querySelector('[data-modal-trigger]');
      const smallModalElement = document.querySelector('[data-modal-small]');
      const mediumModalElement = document.querySelector('[data-modal-medium]');
      const largeModalElement = document.querySelector('[data-modal-large]');
      const historyModalElement = document.querySelector('[data-modal-history]');
      const staticModalElement = document.querySelector('[data-modal-static]');
      
      if (modalPage) {
        const defaultModal = new Modal(defaultModalElement, {
          triggerOpen: '[data-trigger]'
        }).init();
        defaultModal.element.setAttribute('data-modal', '');
        
        new Modal(smallModalElement, {
          triggerOpen: '[data-trigger-small="open"]',
          size: 'small'
        }).init();
          
        new Modal(mediumModalElement, {
          triggerOpen: '[data-trigger-medium="open"]',
          size: 'medium'
        }).init();
          
        new Modal(largeModalElement, {
          triggerOpen: '[data-trigger-large="open"]',
          size: 'large'
        }).init();
        
        new Modal(historyModalElement, {
          triggerOpen: '[data-trigger-history="open"]',
          size: 'small',
          history: true
        }).init();
        
        const staticModal = new Modal(staticModalElement, {
          triggerOpen: '[data-trigger-static="open"]',
          static: true,
          keyboard: false
        }).init();
        
        staticModal.element.setAttribute('data-modal', '');
        
        function closeModalStatic() {
          return staticModal.hide();
        }
        
        //- Scroll to options
        const scrollToUsage = document.querySelector('[data-scroll-usage]');
        const scrollToOptions = document.querySelector('[data-scroll-options]');
        const scrollToMethods = document.querySelector('[data-scroll-methods]');
        const scrollToOpening = document.querySelector('[data-scroll-opening]');
        const scrollToSize = document.querySelector('[data-scroll-size]');
        const scrollToStaticModal = document.querySelector('[data-scroll-static]');
        const scrollToHistoryOption = document.querySelector('[data-scroll-history]');
        
        scrollToUsage.addEventListener('click', () => {
          new Scroll(document.querySelector('#usage')).init();
        });
        
        scrollToOptions.addEventListener('click', () => {
          new Scroll(document.querySelector('#options')).init();
        });
        
        scrollToMethods.addEventListener('click', () => {
          new Scroll(document.querySelector('#methods')).init();
        });
        
        scrollToOpening.addEventListener('click', () => {
          new Scroll(document.querySelector('#opening-a-modal')).init();
        });
        
        scrollToSize.addEventListener('click', () => {
          new Scroll(document.querySelector('#modal-size')).init();
        });
        
        scrollToStaticModal.addEventListener('click', () => {
          new Scroll(document.querySelector('#static-modal')).init();
        });
        
        scrollToHistoryOption.addEventListener('click', () => {
          new Scroll(document.querySelector('#history-option')).init();
        });
      }
      
      //- Alert page
      const alertPage = document.querySelector('[data-alert-page]');
      const defaultAlert = document.querySelector('[data-alert]');
      const smallAlert = document.querySelector('[data-alert-small]');
      const mediumAlert = document.querySelector('[data-alert-medium]');
      const largeAlert = document.querySelector('[data-alert-large]');
      
      if (alertPage) {
        defaultAlert.addEventListener('click', () => new Alert().init());
        
        smallAlert.addEventListener('click', () => new Alert({
          textMessage: 'Small alert example message',
          size: 'small'
        }).init());
          
        mediumAlert.addEventListener('click', () => new Alert({
          textMessage: 'Medium alert example message',
          size: 'medium'
        }).init());
            
        largeAlert.addEventListener('click', () => new Alert({
          textMessage: 'Large alert example message',
          size: 'large'
        }).init());
      }
      
      //- Notification page
      const notificationPage = document.querySelector('[data-notification-page]')
      const notificationButton = document.querySelector('[data-notification-temp-button]');
      const dynamicNotification = document.querySelector('[data-notification-dynamic]');
      const nonDynamicNotification = document.querySelector('[data-notification]');
      
      if (notificationPage) {
        notificationButton.addEventListener('click', () => {
          const notificationContainer = document.querySelector('[data-notification-temporary]');
          const notification = notificationContainer.querySelector('.notification');
        
          notificationContainer.removeAttribute('data-notification');

          if (notification) {
            notification.remove();
          }
        
          new Notification(notificationContainer, {
            message: 'This is a temporary notification',
            autoHide: true,
            showIn: 500,
            hideIn: 2000
          }).init();
        });
        
        new Notification(dynamicNotification, {
          message: 'This is a dynamic notification.',
          type: 'warning'
        }).init();
        
        new Notification(nonDynamicNotification, {
          closeButton: '[data-close="notification"]',  
          dynamic: false
        }).init();
      }

      //- Confirm page
      const confirmPage = document.querySelector('[data-confirm-page]')
      const defaultConfirmElement = document.querySelector('[data-confirm]')
      const smallConfirmElement = document.querySelector('[data-confirm-small]')
      const mediumConfirmElement = document.querySelector('[data-confirm-medium]')
      const largeConfirmElement = document.querySelector('[data-confirm-large]')
      const callback = (value) => value;
      
      if (confirmPage) {
        defaultConfirmElement.addEventListener('click', () => {
          new Confirm(callback).init();
        });
        
        smallConfirmElement.addEventListener('click', () => {
          new Confirm(callback, {
            textMessage: 'Small confirm example message',
            size: 'small'    
          }).init();
        });
        
        mediumConfirmElement.addEventListener('click', () => {
          new Confirm(callback, {
            textMessage: 'Medium confirm example message',
            size: 'medium'
          }).init();
        });
        
        largeConfirmElement.addEventListener('click', () => {
          new Confirm(callback, {
            textMessage: 'Large confirm example message',
            size: 'large'
          }).init();
        });
      }

      //- Collapse page
      const collapsePage = document.querySelector('[data-collapse-page]');
      const collapseElements = document.querySelectorAll('.toggle');
      
      if (collapsePage) {
        collapseElements.forEach((element) => new Collapse(element).init());
      }
      
      //- Tooltip page
      const tooltipPage = document.querySelector('[data-tooltip-page]');
      const tooltipTop = document.querySelector('[data-tooltip="#top"]');
      const tooltipBottom = document.querySelector('[data-tooltip="#bottom"]');
      const tooltipLeft = document.querySelector('[data-tooltip="#left"]');
      const tooltipRight = document.querySelector('[data-tooltip="#right"]');
      
      if (tooltipPage) {
        new Tooltip(tooltipTop).init();
        
        new Tooltip(tooltipBottom, { placement: 'bottom' }).init();
        
        new Tooltip(tooltipLeft, { placement: 'left' }).init();
        
        new Tooltip(tooltipRight, { placement: 'right' }).init();
      }
      
      //- Scroll page
      const scrollPage = document.querySelector('[data-scroll-page]');
      const scrollElement = document.querySelector('[data-scroll]');
      const footerElement = document.querySelector('header');
      
      if (scrollPage) {
        scrollElement.addEventListener('click', () => new Scroll(footerElement).init());
      }
      
      //- Grid page
      const gridPage = document.querySelector('[data-grid-page]');
      const toggleContainer = document.querySelector('[data-toggle-container]');
      
      if (gridPage) {
        toggleContainer.addEventListener('click', () => {
            const container = document.querySelector('[data-container]');
            let containerText = container.querySelector('[data-container-text]');

            container.classList.toggle('example-container');
            container.classList.toggle('example-container--fluid');
            
            if (container.classList.contains('example-container')) {
              containerText.innerHTML = '.container';
            } else {
              containerText.innerHTML = '.container-fluid';
            }
        });
      }
